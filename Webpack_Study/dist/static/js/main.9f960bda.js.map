{"version":3,"file":"static/js/main.9f960bda.js","mappings":"2IAyBAA,QAAQC,IAAU,EAAG,GACrBD,QAAQC,IC1BO,WAAsB,2BAANC,EAAI,yBAAJA,EAAI,gBAC/B,OAAOA,EAAKC,QAAO,CAACC,EAAGC,IAAMD,EAAIC,GAAG,EACxC,CDwBYC,CAAI,EAAG,EAAG,EAAG,EAAG,IAW5BC,SAASC,eAAe,OAAOC,QAAU,WAIrC,8BAAgDC,MAAK,IAAS,IAAR,IAACC,GAAI,EACvDX,QAAQC,IAAIU,EAAI,EAAG,GAAG,GAE9B,EAGgBC,QAAQC,UAChBH,MAAK,KACTV,QAAQC,IAAI,gBAAgB,IAIhCD,QAAQC,IADI,CAAC,EAAG,EAAG,EAAG,GACNa,SAAS,IAErB,kBAAmBC,WACnBC,OAAOC,iBAAiB,QAAQ,KAC9BF,UAAUG,cACPC,SAAS,sBACTT,MAAMU,IACLpB,QAAQC,IAAI,kBAAmBmB,EAAa,IAE7CC,OAAOC,IACNtB,QAAQC,IAAI,2BAA4BqB,EAAkB,GAC1D,G","sources":["webpack://webpack_study/./src/main.js","webpack://webpack_study/./src/js/sum.js"],"sourcesContent":["//全部引入，体积太大，我们指向引入promise的polyfill\r\n// import \"core-js\"\r\n//按需引入，但是万一有其他es6以上语法，又得一个一个引入，太麻烦\r\n// import \"core-js/es/promise\"\r\n//自动按需引入，在babel.config.js中配置即可\r\n\r\nimport count from './js/count';\r\nimport sum from './js/sum';\r\n// import {mul} from './js/cal'\r\n\r\n//引入css资源，webpack才会对其打包\r\nimport \"./css/index.css\";\r\n//引入less资源\r\nimport \"./less/index.less\";\r\n//引入sass资源\r\nimport \"./sass/index.sass\";\r\nimport \"./sass/index2.scss\";\r\n//引入stylus资源\r\nimport \"./stylus/index.styl\"\r\n//引入字体图标资源\r\nimport \"./font-awesome-4.7.0/css/font-awesome.min.css\"\r\n\r\n// var result1 = count(2, 1);//eslint 检查会报错，因为这里用var定义变量了，\r\n// console.log(result1);\r\n//而在eslint的配置文件中配置了rules不能用var定义变量，实现了在webpack中eslint的使用\r\nconsole.log(count(2, 1));\r\nconsole.log(sum(1, 2, 3, 4, 5));\r\n// console.log(mul(1, 2));\r\n\r\n//如果想js实现热替换，则可以使用下面的代码\r\n//判断是否支持HMR功能\r\nif(module.hot) {\r\n    //这表示当count.js或者sum.js发生变化时，只更新这两个文件，其他文件不变\r\n    module.hot.accept(\"./js/count.js\")\r\n    module.hot.accept(\"./js/sum.js\")\r\n}\r\n\r\ndocument.getElementById(\"btn\").onclick = function () {\r\n    // eslint会对动态导入语法报错，需要修改eslint配置文件\r\n    // webpackChunkName: \"cal\"：这是webpack动态导入模块命名的方式\r\n    // \"cal\"将来就会作为[name]的值显示。\r\n    import(/* webpackChunkName: \"cal\" */\"./js/cal\").then(({mul})=>{\r\n        console.log(mul(1, 2));\r\n    })\r\n}\r\n\r\n//添加promise代码\r\nconst promise = Promise.resolve();\r\npromise.then(() => {\r\n    console.log('hello promise');\r\n})\r\n\r\nconst arr = [1, 2, 3, 4]\r\nconsole.log(arr.includes(1));\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n    window.addEventListener(\"load\", () => {\r\n      navigator.serviceWorker\r\n        .register(\"/service-worker.js\")\r\n        .then((registration) => {\r\n          console.log(\"SW registered: \", registration);\r\n        })\r\n        .catch((registrationError) => {\r\n          console.log(\"SW registration failed: \", registrationError);\r\n        });\r\n    });\r\n}","export default function sum(...args) {\r\n    return args.reduce((p, c) => p + c, 0)\r\n}"],"names":["console","log","args","reduce","p","c","sum","document","getElementById","onclick","then","mul","Promise","resolve","includes","navigator","window","addEventListener","serviceWorker","register","registration","catch","registrationError"],"sourceRoot":""}